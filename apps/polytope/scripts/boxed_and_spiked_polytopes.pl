#  Copyright (c) 2020-2021
#  Andreas Paffenholz
#  Technische Universit채t Darmstadt, Germany
#  https://www2.mathematik.tu-darmstadt.de/~paffenholz
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by the
#  Free Software Foundation; either version 2, or (at your option) any
#  later version: http://www.gnu.org/licenses/gpl.txt.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#-------------------------------------------------------------------------------


use application "polytope";

# return the one exceptional polytope
# it reappears as number 36 in the list of size 6 polytopes
sub exceptional_size_6_polytope {

    my $m = new Matrix<Rational>([[1,0,0,0],[1,1,0,0],[1,0,1,0],[1,-1,-1,0],[1,1,2,3],[1,-1,-2,-3]]);
    my $p = polytope_in_affine_normal_form(new Polytope(POINTS=>$m));
    $p->name = "poly.s06.39";
    return $p;
}

# all polytopes of size 5
# see 
# M처nica Blanco and Francisco Santos
# Lattice 3-polytopes with five lattice points
# arxiv: 1409.6701
sub size_5_polytopes {
    my @polys = ();

    my $m_array=new Array<Matrix<Rational>>([
        [[1,-1,-1,0],[1,0,1,0],[1,1,0,0],[1,1,2,3]],    
        [[1,-2,-1,-2],[1,0,0,1],[1,1,0,0],[1,1,1,1]],
        [[1,-1,-1,-1],[1,0,0,1],[1,1,0,0],[1,1,2,1]],
        [[1,-1,-2,-1],[1,0,0,1],[1,1,0,0],[1,1,3,1]],
        [[1,-1,-2,-1],[1,0,0,1],[1,1,0,0],[1,2,5,1]],
        [[1,-1,-1,-1],[1,0,0,1],[1,1,0,0],[1,2,5,1]],
        [[1,-1,-2,-1],[1,0,0,1],[1,1,0,0],[1,2,7,1]],
        [[1,-2,-3,-1],[1,0,0,1],[1,1,0,0],[1,3,7,1]],
        [[1,-3,-5,-2],[1,0,0,1],[1,1,0,0],[1,2,5,1]]
    ]);

    my $count = 1;
    foreach my $m (@$m_array) {
        my $name = sprintf "poly.s05.%02d", $count;
        $count++;
        my $p = polytope_in_affine_normal_form(new Polytope<Rational>(VERTICES=>$m));
        $p->name = $name;
        push @polys, $p;
    }

    return \@polys;
}

# all polytopes of size 6
# see 
# M처nica Blanco and Francisco Santos
# Lattice 3-polytopes with six lattice points
# arxiv: 1501.01055
sub size_6_polytopes {
    my @polys = ();

    my $m_array = new Array<Matrix<Rational>>([
        [[1,-1,0,0,],[1,0,2,0,],[1,1,0,0,],[1,1,1,2]],
        [[1,-1,-1,0,],[1,0,0,2,],[1,0,1,0,],[1,1,0,0]],
        [[1,-1,-1,0,],[1,0,1,0,],[1,1,0,0,],[1,2,4,6]],
        [[1,-2,-1,5,],[1,-1,-1,0,],[1,0,1,0,],[1,1,0,0]],
        [[1,-2,-1,7,],[1,-1,-1,0,],[1,0,1,0,],[1,1,0,0]],
        [[1,-2,-1,-2,],[1,0,0,1,],[1,1,1,1,],[1,2,0,0]],
        [[1,-1,-1,-1,],[1,0,0,1,],[1,1,2,1,],[1,2,0,0]],
        [[1,-2,-2,-2,],[1,0,0,1,],[1,1,0,0,],[1,1,2,1]],
        [[1,-1,-2,-1,],[1,0,0,1,],[1,1,3,1,],[1,2,0,0]],
        [[1,-2,-4,-2,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1]],
        [[1,-2,-4,-2,],[1,0,0,1,],[1,1,0,0,],[1,2,5,1]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,1,0,0,],[1,1,4,-1]],
        [[1,-2,-1,-2,],[1,0,0,1,],[1,1,1,1,],[1,4,1,2]],
        [[1,-1,-1,-1,],[1,0,0,1,],[1,1,-2,-1,],[1,1,2,1]],
        [[1,-3,-4,-3,],[1,0,0,1,],[1,1,0,0,],[1,1,2,1]],
        [[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,2,6,1]],
        [[1,-2,-4,-3,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1]],
        [[1,-12,-7,-13,],[1,0,0,1,],[1,1,0,0,],[1,1,1,1]],
        [[1,-15,-8,-17,],[1,0,0,1,],[1,1,0,0,],[1,1,1,1]],
        [[1,-7,-9,-8,],[1,0,0,1,],[1,1,0,0,],[1,1,2,1]],
        [[1,-8,-9,-10,],[1,0,0,1,],[1,1,0,0,],[1,1,2,1]],
        [[1,-1,-1,-1,],[1,0,0,1,],[1,1,0,0,],[1,3,7,2]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,0,3,-1,],[1,1,0,0]],
        [[1,-1,-1,-1,],[1,0,0,1,],[1,1,0,0,],[1,4,11,5]],
        [[1,-4,-7,-5,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1]],
        [[1,-7,-11,-6,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1]],
        [[1,-1,-2,-1,],[1,0,0,1,],[1,1,3,1,],[1,2,-1,-1]],
        [[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,4,13,3]],
        [[1,-5,-9,-4,],[1,0,0,1,],[1,1,0,0,],[1,2,5,1]],
        [[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,4,11,2]],
        [[1,-1,1,0,],[1,0,0,0,],[1,0,2,0,],[1,1,0,2,],[1,1,1,0]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,0,1,0,],[1,1,0,0,],[1,1,2,-1]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,0,1,0,],[1,1,0,0,],[1,1,3,-1]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,1,0,0,],[1,1,5,-1]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,0,1,-1,],[1,0,1,0,],[1,1,0,0]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,0,1,0,],[1,1,0,0,],[1,1,1,-1]],
        [[1,-1,-1,0,],[1,0,0,-1,],[1,0,0,1,],[1,0,1,0,],[1,1,0,0]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,0,1,0,],[1,1,0,0,],[1,1,2,-3]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,0,1,0,],[1,1,0,0,],[1,1,5,-3]],
        [[1,-1,-2,-3,],[1,-1,-1,0,],[1,0,1,0,],[1,1,0,0,],[1,1,2,3]],
        [[1,-1,-1,0,],[1,0,1,0,],[1,1,0,0,],[1,1,1,1,],[1,1,2,3]],
        [[1,0,0,0,],[1,0,0,1,],[1,0,1,0,],[1,1,0,0,],[1,3,4,-1]],
        [[1,0,0,0,],[1,0,0,1,],[1,0,1,0,],[1,1,0,0,],[1,4,5,-1]],
        [[1,-2,-1,5,],[1,0,0,0,],[1,0,1,0,],[1,1,0,0,],[1,1,1,0]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,1,0,0,],[1,1,6,-1]],
        [[1,-3,-2,7,],[1,0,0,0,],[1,0,1,0,],[1,1,0,0,],[1,1,1,0]],
        [[1,-2,-1,-2,],[1,-1,0,0,],[1,0,0,1,],[1,1,0,0,],[1,1,1,1]],
        [[1,-1,-1,-1,],[1,-1,0,0,],[1,0,0,1,],[1,1,0,0,],[1,1,2,1]],
        [[1,-1,-1,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,1,1,],[1,1,2,1]],
        [[1,-1,-2,-1,],[1,-1,0,0,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1]],
        [[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,2,1,],[1,1,3,1]],
        [[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,2,1,],[1,2,5,1]],
        [[1,-2,-1,-2,],[1,0,0,1,],[1,1,0,0,],[1,1,1,1,],[1,4,1,3]],
        [[1,-2,-1,-2,],[1,0,0,1,],[1,1,0,0,],[1,1,1,1,],[1,6,1,3]],
        [[1,-1,-1,-1,],[1,0,0,1,],[1,1,-1,0,],[1,1,0,0,],[1,1,2,1]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,0,2,-1,],[1,1,0,0]],
        [[1,-1,-1,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,2,1,],[1,3,1,0]],
        [[1,-1,-1,-1,],[1,0,0,1,],[1,1,-3,-2,],[1,1,0,0,],[1,1,2,1]],
        [[1,-3,-5,-4,],[1,-1,-1,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,2,1]],
        [[1,-5,-7,-6,],[1,-1,-1,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,2,1]],
        [[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1,],[1,2,1,0]],
        [[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1,],[1,2,5,1]],
        [[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1,],[1,2,7,1]],
        [[1,-2,-1,-1,],[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1]],
        [[1,-3,-5,-2,],[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1]],
        [[1,-4,-7,-3,],[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1]],
        [[1,-1,-1,0,],[1,0,0,1,],[1,1,0,0,],[1,1,8,-3]],
        [[1,-4,-5,-3,],[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,1,3,1]],
        [[1,-1,-2,-1,],[1,-1,-1,-1,],[1,0,0,1,],[1,1,0,0,],[1,2,5,1]],
        [[1,-2,-3,-2,],[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,2,5,1]],
        [[1,-3,-5,-2,],[1,-1,-2,-1,],[1,0,0,1,],[1,1,0,0,],[1,2,5,1]],
        [[1,-1,-1,-1,],[1,0,0,1,],[1,1,-1,0,],[1,1,0,0,],[1,2,5,1]],
        [[1,-1,-2,1,],[1,-1,-1,-1,],[1,0,0,1,],[1,1,0,0,],[1,2,5,1]],
        [[1,-2,-3,-2,],[1,-1,-1,-1,],[1,0,0,1,],[1,1,0,0,],[1,2,5,1]],
        [[1,-1,-1,0,],[1,-1,1,-3,],[1,1,0,0,],[1,1,2,3]],
        [[1,-1,-1,0,],[1,-1,0,2,],[1,0,1,0,],[1,1,0,0]]
    ]);

    my $count = 1;
    foreach my $m (@$m_array) {
        my $name = sprintf "poly.s06.%02d", $count;
        $count++;
        my $p = polytope_in_affine_normal_form(new Polytope<Rational>(VERTICES=>$m));
        $p->name = $name;
        push @polys, $p;
    }

    return \@polys;
}

# all boxed polytopes of given size
# see 
# M처nica Blanco and Francisco Santos
# On the enumeration of lattice 3-polytopes
# arxiv: 1601.02577
sub boxed_quasi_minimal_polytopes {
    my $size = shift;

    my $polys = [];

    if ( $size < 7 || $size > 10 ) {
        return $polys;
    }

    my $m_array;
    if ( $size == 7 ) {
        $m_array = new Array<Matrix<Rational>>([
            [[1,0,0,0],[1,1,1,2],[1,1,2,0],[1,2,0,0]],
            [[1,0,1,0],[1,0,1,2],[1,1,0,0],[1,1,2,0],[1,2,0,0]],
            [[1,0,0,1],[1,0,2,0],[1,1,0,0],[1,1,1,2],[1,2,0,0]],

            [[1,0,-1,0],[1,0,1,0],[1,1,1,3],[1,2,0,0]],
            [[1,0,0,0],[1,0,1,1],[1,0,1,2],[1,1,2,0],[1,2,0,0]],
            [[1,0,0,1],[1,0,1,0],[1,0,1,2],[1,1,2,0],[1,2,0,0]],
    
            [[1,0,-1,0],[1,0,1,0],[1,1,1,4],[1,2,0,0]],
            [[1,0, 1,1],[1,1,0,0],[1,1,1,2],[1,1,2,0],[1,2,0,0]],
            [[1,0, 1,0],[1,1,0,1],[1,1,1,2],[1,1,2,0],[1,2,0,0]],
    
            [[1,0,-1,0],[1,0,1,0],[1,1,1,5],[1,2,0,0]],
            [[1,0, 1,0],[1,1,0,0],[1,1,1,2],[1,1,2,0],[1,2,0,0]],
            [[1,0, 1,0],[1,0,2,1],[1,1,0,1],[1,1,1,2],[1,2,1,0]],

            [[1,-1,2,1],[1,0,0,0],[1,0,0,1],[1,1,-1,1],[1,1,1,-1]],
            [[1, 0,0,1],[1,1,0,0],[1,1,1,2],[1,1, 2,0],[1,2,0,0]],
            [[1, 0,1,1],[1,1,0,0],[1,1,1,2],[1,1, 2,0],[1,2,1,0]],

            [[1,0,1,0],[1,0,2,1],[1,1,0,1],[1,1,0,2],[1,2,1,0]],
            [[1,0,0,1],[1,0,2,1],[1,1,1,0],[1,1,1,2],[1,2,1,0]],
            [[1,0,1,0],[1,1,0,0],[1,1,1,2],[1,1,2,0],[1,2,1,0]],

            [[1,0,1,0],[1,1,0,1],[1,1,1,2],[1,1,2,1],[1,2,1,0]],
            [[1,0,1,1],[1,1,0,1],[1,1,1,0],[1,1,1,2],[1,1,2,0],[1,2,1,0]],
            [[1,0,1,1],[1,1,0,1],[1,1,1,0],[1,1,1,2],[1,1,2,1],[1,2,1,1]],

            [[1,0,0,1],[1,0,1,0],[1,0,1,2],[1,0,2,1],[1,1,0,0],[1,2,0,0]],
            [[1,0,1,1],[1,1,0,1],[1,1,1,0],[1,1,1,2],[1,1,2,1],[1,2,1,0]]
        ]);
    }

    if ( $size == 8 ) {
        $m_array = new Array<Matrix<Rational>>([
            [[1,0,0,0],[1,2,0,0],[1,0,2,0],[1,1,0,2]],
            [[1,0,0,0],[1,2,0,0],[1,1,2,0],[1,1,0,2]],
            [[1,0,1,1],[1,1,0,0],[1,1,0,2],[1,1,2,0],[1,2,0,0]],
            [[1,0,1,0],[1,1,0,0],[1,1,0,2],[1,1,2,0],[1,2,0,0]],
            [[1,0,0,0],[1,1,0,1],[1,1,1,2],[1,1,2,0],[1,2,0,0]],
            [[1,0,1,0],[1,1,0,0],[1,1,0,2],[1,1,2,0],[1,2,1,0]],
            [[1,0,0,1],[1,0,1,0],[1,0,2,1],[1,1,1,2],[1,2,1,0]]
        ]);
    }

    if ( $size == 9 ) {
        $m_array = new Array<Matrix<Rational>>([
            [[1,0,0,0],[1,2,0,0],[1,0,2,0],[1,1,0,2],[1,1,1,1]]
        ]);
    }

    if ( $size == 10 ) {
        $m_array = new Array<Matrix<Rational>>([
            [[1,0,0,0],[1,2,0,0],[1,0,2,0],[1,0,0,2]]
        ]);
    }

    my $count = 1;
    foreach my $m (@$m_array) {
        my $name = sprintf "boxed.s%02d.%02d", $size, $count;
        $count++;
        my $p = polytope_in_affine_normal_form(new Polytope<Rational>(VERTICES=>$m));
        $p->name = $name;
        push @$polys, $p;
    }
    return $polys;
}
